// auth api
//        1 - sing up
//        2 - sing in
//        3 - sing out
//        4 - get user info

// folder structure
//        1 - routes
//        2 - controllers
//        3 - models
//        4 - middlewares
//        5 - utils
//        6 - config

// config
//        1 - database
//        2 - server
//        3 - auth
//        4 - logger
//        5 - constants

// utils
//        1 - logger
//        2 - error handler

// coding style
//        1 - use camelCase for variables and functions
//        2 - create aysnc wrapper for async functions
//        3 - use try catch for error handling
//        4 - use arrow functions

// npm packages
//        1 - express
//        2 - mongoose
//        3 - bcrypt
//        4 - jsonwebtoken
//        5 - dotenv
//        6 - cors
//        7 - helmet
//        8 - morgan
//        9 - express-validator
//        10 - nodemailer
//        11 - multer
//        12 - compression
//        13 - rate-limit
//        14 - express-session
//        15 - connect-mongo
//        16 - cookie-parser

// data validation
//        1 - use express-validator for request validation
//        2 - validate the data in the mongoose
//        3 - use validate the data in the frontend also

// token
//        1 - use JWT for authentication
//        2 - use the access token for protected routes
//        3 - use the refresh token for refreshing the access token
//        4 - store the refresh token in the database
//        5 - use the refresh token to get a new access token
//        6 - use the access token to access protected routes
//        7 - use the refresh token to get a new access token when the access token expires

// use es6 imports and exports

// learn about the env config and
// learn about the cookie parser and session management
// learn about the cors and helmet for security
// learn about the morgan for logging

// use the logger for logging
// winston for logging

/////////////////////////////////////////////////////////////////////////

// config env setup

const dotenv = require("dotenv");

dotenv.config({
  path: "backend/config/config.env",
});

// config.env

// PORT = 5000
// DATABASE_URL = mongodb://localhost:27017/messenger
// SECRET = ASHDFKLAHSD2323
// TOKEN_EXP = 7d
// COOKIE_EXP = 7


/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
